<?php

namespace Tests;

use App\Mapper\Pessoa;
use Doctrine\ORM\EntityManager;

class CRUDPessoasTest extends BaseUnitTests
{

    /**
     * @var EntityManager
     */
    private $em;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->em = $this->_ci->get('database');
    }

    /**
     * @param Pessoa $pessoa
     * @test
     * @dataProvider dataFactory
     */
    public function shouldCreatePessoa(Pessoa $pessoa) {

        $this->em->getRepository(Pessoa::class)->saveOrUpdate($pessoa);
        $this->assertTrue(is_numeric($pessoa->getId()));

    }

    /**
     * @param Pessoa $pessoa
     * @test
     * @dataProvider dataFactory
     */
    public function shouldSearchPessoa(Pessoa $pessoa) {

        $arrayPessoa = $this->em->getRepository(Pessoa::class)->findForName($pessoa->getNome());
        $pessoa->setId($arrayPessoa[0]->getId());

        $this->assertEquals($arrayPessoa[0]->getNome(), $pessoa->getNome());
        $this->assertEquals($arrayPessoa[0]->getProfissao(), $pessoa->getProfissao());

    }

    /**
     * @param Pessoa $pessoa
     * @test
     * @dataProvider dataFactory
     */
    public function shouldDestroyPessoa(Pessoa $pessoa) {

        $arrayPessoa = $this->em->getRepository(Pessoa::class)->findForName($pessoa->getNome());
        $pessoa = $arrayPessoa[0];

        $this->em->getRepository(Pessoa::class)->delete($pessoa);

        $arrayPessoa = $this->em->getRepository(Pessoa::class)->findForName($pessoa->getNome());
        $this->assertCount(0, $arrayPessoa);

    }

    public function dataFactory() {
        $pessoa = new Pessoa();
        $pessoa->setNome('Dilson');
        $pessoa->setProfissao('Analista de Sistemas');

        return [
            [$pessoa]
        ];
    }

}